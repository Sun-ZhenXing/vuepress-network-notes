import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as p,c as l,b as t,d as a,a as n,e as c}from"./app-C-Jp-DEG.js";const r={},i=c(`<h1 id="http-协议概述" tabindex="-1"><a class="header-anchor" href="#http-协议概述"><span>HTTP 协议概述</span></a></h1><h2 id="1-http-协议" tabindex="-1"><a class="header-anchor" href="#1-http-协议"><span>1. HTTP 协议</span></a></h2><p>HTTP（超文本传输协议）是基于 TCP/IP 协议的应用层协议，位于传输层之上，此处的传输层指的是 TCP。主要规定了客户端和服务器之间的通信格式，默认使用 80 端口。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>最早版本是 1991 年发布的 0.9 版。该版本极其简单，只有一个命令 <code>GET</code>。</p><div class="language-log" data-ext="log" data-title="log"><pre class="language-log"><code>GET <span class="token file-path string">/index.html</span>
</code></pre></div><p>上面命令表示，TCP 连接建立后，客户端向服务器请求网页 <code>index.html</code>。</p><p>协议规定，服务器只能回应 HTML 格式的字符串，例如：</p><div class="language-html" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>服务器发送完毕，就关闭 TCP 连接。</p><h2 id="2-http10" tabindex="-1"><a class="header-anchor" href="#2-http10"><span>2. HTTP/1.0</span></a></h2><p>1996 年 5 月，HTTP/1.0 版本发布，内容大大增加。</p><h2 id="3-http11" tabindex="-1"><a class="header-anchor" href="#3-http11"><span>3. HTTP/1.1</span></a></h2><p>1997 年 1 月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议。</p><h2 id="4-http2" tabindex="-1"><a class="header-anchor" href="#4-http2"><span>4. HTTP/2</span></a></h2><p>2015 年，HTTP/2 发布。</p><h2 id="5-http3" tabindex="-1"><a class="header-anchor" href="#5-http3"><span>5. HTTP/3</span></a></h2>`,16),h={href:"https://datatracker.ietf.org/doc/rfc9114/",target:"_blank",rel:"noopener noreferrer"},d=t("sup",{class:"footnote-ref"},[t("a",{href:"#footnote2"},"[2]"),t("a",{class:"footnote-anchor",id:"footnote-ref2"})],-1),T=t("p",null,"HTTP3 不再使用 TCP 协议，而是使用基于 UDP 的 QUIC 协议，HTTP3 在保持 QUIC 稳定性的同时使用 UDP 来实现高速度，同时又不会牺牲 TLS 的安全性。",-1),g=t("hr",{class:"footnotes-sep"},null,-1),u={class:"footnotes"},f={class:"footnotes-list"},m={id:"footnote1",class:"footnote-item"},P={href:"https://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"},k=t("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),_={id:"footnote2",class:"footnote-item"},H={href:"https://zh.wikipedia.org/zh-cn/HTTP/3",target:"_blank",rel:"noopener noreferrer"},x=t("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1);function y(b,C){const e=s("ExternalLinkIcon");return p(),l("div",null,[i,t("p",null,[a("2018 年 11 月正式承认了 HTTP/3 协议。2022 年 6 月 6 日，IETF 正式标准化 HTTP/3 为 "),t("a",h,[a("RFC9114"),n(e)]),a("。"),d]),T,g,t("section",u,[t("ol",f,[t("li",m,[t("p",null,[a("HTTP 协议入门，阮一峰的博客，"),t("a",P,[a("https://www.ruanyifeng.com/blog/2016/08/http.html"),n(e)]),a(),k])]),t("li",_,[t("p",null,[a("HTTP/3，维基百科，"),t("a",H,[a("https://zh.wikipedia.org/zh-cn/HTTP/3"),n(e)]),a(),x])])])])])}const E=o(r,[["render",y],["__file","http.html.vue"]]),I=JSON.parse('{"path":"/application-layer-protocol/http/http.html","title":"HTTP 协议概述","lang":"zh-CN","frontmatter":{"description":"HTTP 协议概述 1. HTTP 协议 HTTP（超文本传输协议）是基于 TCP/IP 协议的应用层协议，位于传输层之上，此处的传输层指的是 TCP。主要规定了客户端和服务器之间的通信格式，默认使用 80 端口。[1] 最早版本是 1991 年发布的 0.9 版。该版本极其简单，只有一个命令 GET。 上面命令表示，TCP 连接建立后，客户端向服务器...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-network-notes/vuepress-network-notes/application-layer-protocol/http/http.html"}],["meta",{"property":"og:site_name","content":"计算机网络"}],["meta",{"property":"og:title","content":"HTTP 协议概述"}],["meta",{"property":"og:description","content":"HTTP 协议概述 1. HTTP 协议 HTTP（超文本传输协议）是基于 TCP/IP 协议的应用层协议，位于传输层之上，此处的传输层指的是 TCP。主要规定了客户端和服务器之间的通信格式，默认使用 80 端口。[1] 最早版本是 1991 年发布的 0.9 版。该版本极其简单，只有一个命令 GET。 上面命令表示，TCP 连接建立后，客户端向服务器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-19T12:29:11.000Z"}],["meta",{"property":"article:author","content":"Alex Sun"}],["meta",{"property":"article:modified_time","content":"2024-06-19T12:29:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTP 协议概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-19T12:29:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Alex Sun\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. HTTP 协议","slug":"1-http-协议","link":"#1-http-协议","children":[]},{"level":2,"title":"2. HTTP/1.0","slug":"2-http10","link":"#2-http10","children":[]},{"level":2,"title":"3. HTTP/1.1","slug":"3-http11","link":"#3-http11","children":[]},{"level":2,"title":"4. HTTP/2","slug":"4-http2","link":"#4-http2","children":[]},{"level":2,"title":"5. HTTP/3","slug":"5-http3","link":"#5-http3","children":[]}],"git":{"createdTime":1718800151000,"updatedTime":1718800151000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.09,"words":326},"filePathRelative":"application-layer-protocol/http/http.md","localizedDate":"2024年6月19日","autoDesc":true,"excerpt":"\\n<h2>1. HTTP 协议</h2>\\n<p>HTTP（超文本传输协议）是基于 TCP/IP 协议的应用层协议，位于传输层之上，此处的传输层指的是 TCP。主要规定了客户端和服务器之间的通信格式，默认使用 80 端口。<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup></p><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">\\n<p>最早版本是 1991 年发布的 0.9 版。该版本极其简单，只有一个命令 <code>GET</code>。</p>\\n<div class=\\"language-log\\" data-ext=\\"log\\" data-title=\\"log\\"><pre class=\\"language-log\\"><code>GET <span class=\\"token file-path string\\">/index.html</span>\\n</code></pre></div><p>上面命令表示，TCP 连接建立后，客户端向服务器请求网页 <code>index.html</code>。</p>\\n<p>协议规定，服务器只能回应 HTML 格式的字符串，例如：</p>\\n<div class=\\"language-html\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>html</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>Hello World<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>html</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div><p>服务器发送完毕，就关闭 TCP 连接。</p>\\n</a>"}');export{E as comp,I as data};
