import{_ as o,M as s,p as c,q as p,R as t,t as a,N as n,a1 as r}from"./framework-d3922052.js";const l={},h=r(`<h1 id="http-协议概述" tabindex="-1"><a class="header-anchor" href="#http-协议概述" aria-hidden="true">#</a> HTTP 协议概述</h1><h2 id="_1-http-协议" tabindex="-1"><a class="header-anchor" href="#_1-http-协议" aria-hidden="true">#</a> 1. HTTP 协议</h2><p>HTTP（超文本传输协议）是基于 TCP/IP 协议的应用层协议，位于传输层之上，此处的传输层指的是 TCP。主要规定了客户端和服务器之间的通信格式，默认使用 80 端口。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>最早版本是 1991 年发布的 0.9 版。该版本极其简单，只有一个命令 <code>GET</code>。</p><div class="language-log" data-ext="log"><pre class="language-log"><code>GET <span class="token file-path string">/index.html</span>
</code></pre></div><p>上面命令表示，TCP 连接建立后，客户端向服务器请求网页 <code>index.html</code>。</p><p>协议规定，服务器只能回应 HTML 格式的字符串，例如：</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>Hello World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>服务器发送完毕，就关闭 TCP 连接。</p><h2 id="_2-http-1-0" tabindex="-1"><a class="header-anchor" href="#_2-http-1-0" aria-hidden="true">#</a> 2. HTTP/1.0</h2><p>1996 年 5 月，HTTP/1.0 版本发布，内容大大增加。</p><h2 id="_3-http-1-1" tabindex="-1"><a class="header-anchor" href="#_3-http-1-1" aria-hidden="true">#</a> 3. HTTP/1.1</h2><p>1997 年 1 月，HTTP/1.1 版本发布，只比 1.0 版本晚了半年。它进一步完善了 HTTP 协议。</p><h2 id="_4-http-2" tabindex="-1"><a class="header-anchor" href="#_4-http-2" aria-hidden="true">#</a> 4. HTTP/2</h2><p>2015 年，HTTP/2 发布。</p><h2 id="_5-http-3" tabindex="-1"><a class="header-anchor" href="#_5-http-3" aria-hidden="true">#</a> 5. HTTP/3</h2>`,16),i={href:"https://datatracker.ietf.org/doc/rfc9114/",target:"_blank",rel:"noopener noreferrer"},d=t("sup",{class:"footnote-ref"},[t("a",{href:"#footnote2"},"[2]"),t("a",{class:"footnote-anchor",id:"footnote-ref2"})],-1),f=t("p",null,"HTTP3 不再使用 TCP 协议，而是使用基于 UDP 的 QUIC 协议，HTTP3 在保持 QUIC 稳定性的同时使用 UDP 来实现高速度，同时又不会牺牲 TLS 的安全性。",-1),_=t("hr",{class:"footnotes-sep"},null,-1),T={class:"footnotes"},u={class:"footnotes-list"},g={id:"footnote1",class:"footnote-item"},k={href:"https://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"},P=t("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),m={id:"footnote2",class:"footnote-item"},H={href:"https://zh.wikipedia.org/zh-cn/HTTP/3",target:"_blank",rel:"noopener noreferrer"},x=t("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1);function b(C,w){const e=s("ExternalLinkIcon");return c(),p("div",null,[h,t("p",null,[a("2018 年 11 月正式承认了 HTTP/3 协议。2022 年 6 月 6 日，IETF 正式标准化 HTTP/3 为 "),t("a",i,[a("RFC9114"),n(e)]),a("。"),d]),f,_,t("section",T,[t("ol",u,[t("li",g,[t("p",null,[a("HTTP 协议入门，阮一峰的博客，"),t("a",k,[a("https://www.ruanyifeng.com/blog/2016/08/http.html"),n(e)]),a(),P])]),t("li",m,[t("p",null,[a("HTTP/3，维基百科，"),t("a",H,[a("https://zh.wikipedia.org/zh-cn/HTTP/3"),n(e)]),a(),x])])])])])}const E=o(l,[["render",b],["__file","index.html.vue"]]);export{E as default};
